// <auto-generated />
using DATABASE;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DATABASE.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DATABASE.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Pizzas"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Burgers"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Drinks"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Snacks"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Sauces"
                        });
                });

            modelBuilder.Entity("DATABASE.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Minsk"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Name = "Brest"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 1,
                            Name = "Gomel"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 2,
                            Name = "Moscow"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 2,
                            Name = "Saint Petersburg"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 2,
                            Name = "Novosibirsk"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 3,
                            Name = "New York"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 3,
                            Name = "Los Angeles"
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 3,
                            Name = "Chicago"
                        });
                });

            modelBuilder.Entity("DATABASE.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Belarus"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Russia"
                        },
                        new
                        {
                            Id = 3,
                            Name = "USA"
                        });
                });

            modelBuilder.Entity("DATABASE.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = "25.01.2022 12:46",
                            UserId = 5
                        },
                        new
                        {
                            Id = 2,
                            Date = "25.01.2022 12:46",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Date = "25.01.2022 12:46",
                            UserId = 14
                        },
                        new
                        {
                            Id = 4,
                            Date = "25.01.2022 12:46",
                            UserId = 9
                        },
                        new
                        {
                            Id = 5,
                            Date = "25.01.2022 12:46",
                            UserId = 6
                        },
                        new
                        {
                            Id = 6,
                            Date = "25.01.2022 12:46",
                            UserId = 15
                        });
                });

            modelBuilder.Entity("DATABASE.Phone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Phones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Model = "Xiaomi",
                            Number = "375293776020",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Model = "Iphone",
                            Number = "375296332394",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Model = "Iphone",
                            Number = "375297764345",
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Model = "Nokia",
                            Number = "375297463543",
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            Model = "Iphone",
                            Number = "375256787534",
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            Model = "Iphone",
                            Number = "802545346",
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            Model = "Iphone",
                            Number = "802565756",
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            Model = "Samsung",
                            Number = "802525645",
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            Model = "Nokia",
                            Number = "802542354",
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            Model = "Iphone",
                            Number = "125453434",
                            UserId = 10
                        },
                        new
                        {
                            Id = 11,
                            Model = "Iphone",
                            Number = "123468675",
                            UserId = 11
                        },
                        new
                        {
                            Id = 12,
                            Model = "Iphone",
                            Number = "123423444",
                            UserId = 12
                        },
                        new
                        {
                            Id = 13,
                            Model = "Iphone",
                            Number = "123454622",
                            UserId = 13
                        },
                        new
                        {
                            Id = 14,
                            Model = "Iphone",
                            Number = "123457783",
                            UserId = 14
                        },
                        new
                        {
                            Id = 15,
                            Model = "Iphone",
                            Number = "123443453",
                            UserId = 15
                        });
                });

            modelBuilder.Entity("DATABASE.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Description of California Pizza",
                            Name = "California Pizza",
                            Price = 20
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Description of Greek Pizza",
                            Name = "Greek Pizza",
                            Price = 20
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Description of Sicilian Pizza",
                            Name = "Sicilian Pizza",
                            Price = 20
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Description = "Description of Hamburger",
                            Name = "Hamburger",
                            Price = 10
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Description = "Description of Cheeseburger",
                            Name = "Cheeseburger",
                            Price = 10
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            Description = "Description of Coca cola",
                            Name = "Coca cola",
                            Price = 5
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            Description = "Description of Fanta",
                            Name = "Fanta",
                            Price = 5
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            Description = "Description of Sprite",
                            Name = "Sprite",
                            Price = 5
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 4,
                            Description = "Description of Fries",
                            Name = "Fries",
                            Price = 7
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 4,
                            Description = "Description of Sushi",
                            Name = "Sushi",
                            Price = 7
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 5,
                            Description = "Description of Ketchup",
                            Name = "Ketchup",
                            Price = 3
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 5,
                            Description = "Description of Soy sauce",
                            Name = "Soy sauce",
                            Price = 3
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 5,
                            Description = "Description of Tartar sauce",
                            Name = "Tartar sauce",
                            Price = 3
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 5,
                            Description = "Description of Taco sauce",
                            Name = "Taco sauce",
                            Price = 3
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 5,
                            Description = "Description of Barbecue sauce",
                            Name = "Barbecue sauce",
                            Price = 3
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 5,
                            Description = "Description of Cheese sauce",
                            Name = "Cheese sauce",
                            Price = 3
                        });
                });

            modelBuilder.Entity("DATABASE.ProductsOrder", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("ProductsOrders");

                    b.HasData(
                        new
                        {
                            ProductId = 6,
                            OrderId = 1
                        },
                        new
                        {
                            ProductId = 1,
                            OrderId = 2
                        },
                        new
                        {
                            ProductId = 10,
                            OrderId = 3
                        },
                        new
                        {
                            ProductId = 8,
                            OrderId = 4
                        },
                        new
                        {
                            ProductId = 5,
                            OrderId = 5
                        },
                        new
                        {
                            ProductId = 14,
                            OrderId = 6
                        });
                });

            modelBuilder.Entity("DATABASE.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 23,
                            CityId = 1,
                            Name = "Aleksandr",
                            Surname = "Vysotski"
                        },
                        new
                        {
                            Id = 2,
                            Age = 22,
                            CityId = 1,
                            Name = "Pavel",
                            Surname = "Motuz"
                        },
                        new
                        {
                            Id = 3,
                            Age = 22,
                            CityId = 1,
                            Name = "Artemiy",
                            Surname = "Kasabuka"
                        },
                        new
                        {
                            Id = 4,
                            Age = 33,
                            CityId = 2,
                            Name = "Ivan",
                            Surname = "Ivanov"
                        },
                        new
                        {
                            Id = 5,
                            Age = 29,
                            CityId = 3,
                            Name = "Nikolai",
                            Surname = "Krasko"
                        },
                        new
                        {
                            Id = 6,
                            Age = 40,
                            CityId = 4,
                            Name = "Maksim",
                            Surname = "Galkin"
                        },
                        new
                        {
                            Id = 7,
                            Age = 58,
                            CityId = 4,
                            Name = "Alla",
                            Surname = "Pugacheva"
                        },
                        new
                        {
                            Id = 8,
                            Age = 9,
                            CityId = 5,
                            Name = "Egor",
                            Surname = "Zhelobanov"
                        },
                        new
                        {
                            Id = 9,
                            Age = 78,
                            CityId = 6,
                            Name = "Nikita",
                            Surname = "Milyavskiy"
                        },
                        new
                        {
                            Id = 10,
                            Age = 18,
                            CityId = 7,
                            Name = "Tom",
                            Surname = "Kruz"
                        },
                        new
                        {
                            Id = 11,
                            Age = 28,
                            CityId = 7,
                            Name = "Leonardo",
                            Surname = "Dicaprio"
                        },
                        new
                        {
                            Id = 12,
                            Age = 41,
                            CityId = 8,
                            Name = "Dwayne",
                            Surname = "Jonson"
                        },
                        new
                        {
                            Id = 13,
                            Age = 38,
                            CityId = 8,
                            Name = "Henry",
                            Surname = "Cavill"
                        },
                        new
                        {
                            Id = 14,
                            Age = 46,
                            CityId = 8,
                            Name = "Brad",
                            Surname = "Pitt"
                        },
                        new
                        {
                            Id = 15,
                            Age = 49,
                            CityId = 9,
                            Name = "Will",
                            Surname = "Smith"
                        });
                });

            modelBuilder.Entity("DATABASE.City", b =>
                {
                    b.HasOne("DATABASE.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("DATABASE.Order", b =>
                {
                    b.HasOne("DATABASE.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DATABASE.Phone", b =>
                {
                    b.HasOne("DATABASE.User", "User")
                        .WithOne("Phone")
                        .HasForeignKey("DATABASE.Phone", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DATABASE.Product", b =>
                {
                    b.HasOne("DATABASE.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DATABASE.ProductsOrder", b =>
                {
                    b.HasOne("DATABASE.Order", "Order")
                        .WithMany("ProductsOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DATABASE.Product", "Product")
                        .WithMany("ProductsOrders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DATABASE.User", b =>
                {
                    b.HasOne("DATABASE.City", "City")
                        .WithMany("Users")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("DATABASE.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DATABASE.City", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("DATABASE.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("DATABASE.Order", b =>
                {
                    b.Navigation("ProductsOrders");
                });

            modelBuilder.Entity("DATABASE.Product", b =>
                {
                    b.Navigation("ProductsOrders");
                });

            modelBuilder.Entity("DATABASE.User", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Phone")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
